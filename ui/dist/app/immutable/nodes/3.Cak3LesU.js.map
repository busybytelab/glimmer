{"version":3,"file":"3.Cak3LesU.js","sources":["../../../../../../src/routes/chat/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { error as errorStore } from '$lib/stores';\n\timport { llmService } from '$lib/services/llm';\n\timport type { Usage } from '$lib/services/llm';\n\timport SelectField from '../../components/common/SelectField.svelte';\n\t\n\ttype Message = {\n\t\trole: 'user' | 'assistant';\n\t\tcontent: string;\n\t\ttimestamp: Date;\n\t\tusage?: Usage;\n\t};\n\t\n\tlet message = '';\n\tlet messages: Message[] = [];\n\tlet isLoading = false;\n\tlet systemPrompt = \"You are a helpful learning assistant for kids.\";\n\tlet selectedModel = \"\"; // Empty means use default model\n\tlet totalTokens = 0;\n\tlet totalPromptTokens = 0;\n\tlet totalCompletionTokens = 0;\n\tlet totalCost = 0;\n\tlet isLoadingModels = false;\n\tlet modelError: string | null = null;\n\t\n\t// Available models - will be populated from backend\n\tlet availableModels: { id: string; name: string; isDefault?: boolean }[] = [];\n\t\n\t// Fetch available models from backend\n\tasync function fetchModels() {\n\t\tisLoadingModels = true;\n\t\tmodelError = null;\n\t\t\n\t\ttry {\n\t\t\tconst data = await llmService.getInfo();\n\t\t\t\n\t\t\t// Transform the models data into the format we need\n\t\t\tavailableModels = data.platforms.flatMap(platform => \n\t\t\t\tplatform.models.map(model => ({\n\t\t\t\t\tid: model.name,\n\t\t\t\t\tname: `${model.name}${model.isDefault ? ' (Default)' : ''}`,\n\t\t\t\t\tisDefault: model.isDefault\n\t\t\t\t}))\n\t\t\t);\n\t\t\t\n\t\t\t// If no models were found, add a default option\n\t\t\tif (availableModels.length === 0) {\n\t\t\t\tavailableModels = [{ id: \"\", name: \"Default\" }];\n\t\t\t}\n\t\t\t\n\t\t\t// Select the default model if available\n\t\t\tconst defaultModel = availableModels.find(m => m.isDefault);\n\t\t\tif (defaultModel) {\n\t\t\t\tselectedModel = defaultModel.id;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Error fetching models:', err);\n\t\t\tmodelError = err instanceof Error ? err.message : 'Failed to fetch models';\n\t\t\t// Fallback to default model\n\t\t\tavailableModels = [{ id: \"\", name: \"Default\" }];\n\t\t} finally {\n\t\t\tisLoadingModels = false;\n\t\t}\n\t}\n\t\n\t// Fetch models when component mounts\n\tfetchModels();\n\t\n\t// Calculate the total tokens and cost used in the conversation\n\t$: {\n\t\tlet prompt = 0;\n\t\tlet completion = 0;\n\t\tlet total = 0;\n\t\tlet cost = 0;\n\t\t\n\t\tmessages.forEach(msg => {\n\t\t\tif (msg.usage) {\n\t\t\t\tprompt += msg.usage.PromptTokens || 0;\n\t\t\t\tcompletion += msg.usage.CompletionTokens || 0;\n\t\t\t\ttotal += msg.usage.TotalTokens || 0;\n\t\t\t\tcost += msg.usage.Cost || 0;\n\t\t\t}\n\t\t});\n\t\t\n\t\ttotalPromptTokens = prompt;\n\t\ttotalCompletionTokens = completion;\n\t\ttotalTokens = total;\n\t\ttotalCost = cost;\n\t}\n\t\n\t// Create tooltip content for total tokens\n\t$: totalTokensTooltip = `Prompt: ${totalPromptTokens} tokens\\nCompletion: ${totalCompletionTokens} tokens\\nCost: $${totalCost.toFixed(6)}`;\n\t\n\tasync function sendMessage() {\n\t\tif (!message.trim()) return;\n\t\t\n\t\t// Add user message to chat\n\t\tconst userMessage: Message = {\n\t\t\trole: 'user',\n\t\t\tcontent: message,\n\t\t\ttimestamp: new Date()\n\t\t};\n\t\tmessages = [...messages, userMessage];\n\t\t\n\t\t// Clear input\n\t\tmessage = '';\n\t\tisLoading = true;\n\t\terrorStore.set(null);\n\t\t\n\t\ttry {\n\t\t\t// Prepare chat history by concatenating all previous messages\n\t\t\tconst chatHistory = messages.map(msg => `${msg.role === 'user' ? 'User' : 'Assistant'}: ${msg.content}`).join('\\n\\n');\n\t\t\t\n\t\t\t// Send chat request using the LLM service\n\t\t\tconst data = await llmService.chat(chatHistory, systemPrompt, selectedModel || undefined);\n\t\t\t\n\t\t\t// Add assistant response to chat\n\t\t\tconst assistantMessage: Message = {\n\t\t\t\trole: 'assistant',\n\t\t\t\tcontent: data.response,\n\t\t\t\ttimestamp: new Date(),\n\t\t\t\tusage: data.usage\n\t\t\t};\n\t\t\tmessages = [...messages, assistantMessage];\n\t\t\t\n\t\t\t// Scroll to bottom\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst chatContainer = document.querySelector('.chat-container');\n\t\t\t\tif (chatContainer) {\n\t\t\t\t\tchatContainer.scrollTop = chatContainer.scrollHeight;\n\t\t\t\t}\n\t\t\t}, 50);\n\t\t\t\n\t\t} catch (err) {\n\t\t\tconsole.error('Error sending message:', err);\n\t\t\terrorStore.set(err instanceof Error ? err.message : 'Failed to send message');\n\t\t} finally {\n\t\t\tisLoading = false;\n\t\t}\n\t}\n\t\n\tfunction handleKeyDown(event: KeyboardEvent) {\n\t\tif (event.key === 'Enter' && !event.shiftKey) {\n\t\t\tevent.preventDefault();\n\t\t\tsendMessage();\n\t\t}\n\t}\n</script>\n\n<div class=\"max-w-full mx-auto px-4 sm:px-6 md:px-8 my-8\">\n\t<div class=\"flex justify-between items-center mb-6\">\n\t\t<h1 class=\"text-2xl font-semibold text-gray-900\">Chat with LLM</h1>\n\t\t\n\t\t<div class=\"flex items-center\">\n\t\t\t<SelectField\n\t\t\t\tid=\"modelSelect\"\n\t\t\t\tlabel=\"Model\"\n\t\t\t\tbind:value={selectedModel}\n\t\t\t\tdisabled={isLoadingModels}\n\t\t\t\tcols=\"\"\n\t\t\t\tinline={true}\n\t\t\t>\n\t\t\t\t{#if isLoadingModels}\n\t\t\t\t\t<option value=\"\">Loading models...</option>\n\t\t\t\t{:else if modelError}\n\t\t\t\t\t<option value=\"\">Error loading models</option>\n\t\t\t\t{:else}\n\t\t\t\t\t{#each availableModels as model}\n\t\t\t\t\t\t<option value={model.id}>{model.name}</option>\n\t\t\t\t\t{/each}\n\t\t\t\t{/if}\n\t\t\t</SelectField>\n\t\t</div>\n\t</div>\n\t\n\t<div class=\"bg-white shadow rounded-lg\">\n\t\t<!-- Chat messages container without fixed height -->\n\t\t<div class=\"px-4 py-5 sm:p-6 chat-container\">\n\t\t\t{#if messages.length === 0}\n\t\t\t\t<div class=\"text-center py-12 border border-dashed border-gray-200 rounded-lg\">\n\t\t\t\t\t<p class=\"text-gray-500\">\n\t\t\t\t\t\tNo messages yet. Start a conversation below.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t{:else}\n\t\t\t\t<div class=\"space-y-6\">\n\t\t\t\t\t{#each messages as msg}\n\t\t\t\t\t\t<div class=\"flex flex-col\">\n\t\t\t\t\t\t\t<div class=\"flex items-center mb-2\">\n\t\t\t\t\t\t\t\t<span class=\"font-medium text-sm text-gray-700 mr-2\">\n\t\t\t\t\t\t\t\t\t{msg.role === 'user' ? 'You' : 'Assistant'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span class=\"text-xs text-gray-500\">\n\t\t\t\t\t\t\t\t\t{msg.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{#if msg.role === 'assistant' && msg.usage}\n\t\t\t\t\t\t\t\t\t<span class=\"text-xs text-gray-400 ml-2 tooltip\" \n\t\t\t\t\t\t\t\t\t\ttitle=\"Model: {msg.usage.LlmModelName || 'Default'}&#10;Cache hit: {msg.usage.CacheHit ? 'Yes' : 'No'}&#10;Prompt: {msg.usage.PromptTokens} tokens&#10;Completion: {msg.usage.CompletionTokens} tokens&#10;Cost: ${(msg.usage.Cost || 0).toFixed(6)}\">\n\t\t\t\t\t\t\t\t\t\t({msg.usage.TotalTokens} tokens)\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"{msg.role === 'user' ? 'bg-blue-50 border-blue-100' : 'bg-gray-50 border-gray-100'} border rounded-lg p-4\">\n\t\t\t\t\t\t\t\t<p class=\"whitespace-pre-wrap break-words text-left text-gray-800\">{msg.content}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/each}\n\t\t\t\t\t{#if isLoading}\n\t\t\t\t\t\t<div class=\"flex flex-col\">\n\t\t\t\t\t\t\t<div class=\"flex items-center mb-2\">\n\t\t\t\t\t\t\t\t<span class=\"font-medium text-sm text-gray-700\">Assistant</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"bg-gray-50 border border-gray-100 rounded-lg p-4\">\n\t\t\t\t\t\t\t\t<div class=\"flex space-x-2\">\n\t\t\t\t\t\t\t\t\t<div class=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce bounce-delay-1\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce bounce-delay-2\"></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t\t\n\t\t<!-- Input area -->\n\t\t<div class=\"px-4 py-4 sm:px-6 border-t border-gray-200\">\n\t\t\t<form on:submit|preventDefault={sendMessage} class=\"flex\">\n\t\t\t\t<textarea\n\t\t\t\t\tbind:value={message}\n\t\t\t\t\ton:keydown={handleKeyDown}\n\t\t\t\t\tplaceholder=\"Type your message...\"\n\t\t\t\t\trows=\"3\"\n\t\t\t\t\tclass=\"flex-1 px-4 py-2 border border-gray-300 rounded-l-md focus:outline-none focus:ring-0 focus:ring-secondary focus:border-secondary resize-none dark:bg-gray-700 dark:text-gray-100 dark:border-gray-600 dark:placeholder-gray-500\"\n\t\t\t\t></textarea>\n\t\t\t\t<button \n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tdisabled={isLoading || !message.trim()}\n\t\t\t\t\tclass=\"bg-secondary text-white px-6 py-2 rounded-r-md hover:bg-blue-600 focus:outline-none focus:ring-0 focus:ring-secondary focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed flex-shrink-0\"\n\t\t\t\t>\n\t\t\t\t\t{isLoading ? 'Sending...' : 'Send'}\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t<div class=\"flex justify-between mt-2\">\n\t\t\t\t<p class=\"text-xs text-gray-500\">Press Enter to send, Shift+Enter for new line</p>\n\t\t\t\t<p class=\"text-xs text-gray-500 font-medium tooltip\" title={totalTokensTooltip}>{totalTokens} tokens</p>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n<style lang=\"postcss\">\n\t.bounce-delay-1 {\n\t\tanimation-delay: 0.1s;\n\t}\n\t.bounce-delay-2 {\n\t\tanimation-delay: 0.2s;\n\t}\n\t.tooltip {\n\t\tposition: relative;\n\t}\n\t.tooltip:hover::after {\n\t\tcontent: attr(title);\n\t\tposition: absolute;\n\t\tbottom: 100%;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\tpadding: 4px 8px;\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\n\t\tcolor: white;\n\t\tborder-radius: 4px;\n\t\tfont-size: 12px;\n\t\twhite-space: pre;\n\t\tz-index: 10;\n\t}\n</style> "],"names":["message","messages","$.mutable_source","isLoading","systemPrompt","selectedModel","totalTokens","totalPromptTokens","totalCompletionTokens","totalCost","isLoadingModels","modelError","availableModels","fetchModels","$.set","data","llmService","platform","model","$.get","defaultModel","m","err","sendMessage","userMessage","errorStore","chatHistory","msg","assistantMessage","chatContainer","handleKeyDown","event","prompt","completion","total","cost","totalTokensTooltip","$$value","$.each","node_2","option_2_value","option_2","$.set_text","text","$$render","consequent_1","alternate_1","consequent","alternate","node_4","$0","consequent_3","text_1","$.set_class","div_9","text_4","consequent_4","consequent_2","alternate_2","$.bind_value","textarea"],"mappings":"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"}