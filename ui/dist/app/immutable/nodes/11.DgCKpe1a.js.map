{"version":3,"file":"11.DgCKpe1a.js","sources":["../../../../../../src/routes/practice-topics/[id]/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    import { page } from '$app/stores';\n    import { goto } from '$app/navigation';\n    import type { PracticeTopic } from '$lib/types';\n    import pb from '$lib/pocketbase';\n    import ActionToolbar from '../../../components/common/ActionToolbar.svelte';\n    import Breadcrumbs from '../../../components/common/Breadcrumbs.svelte';\n\n    // Define the breadcrumb item type\n    type BreadcrumbItem = {\n        label: string;\n        href?: string;\n        icon?: string;\n    };\n\n    let topic: PracticeTopic | null = null;\n    let pastPractices: any[] = [];\n    let loading = true;\n    let error: string | null = null;\n    let topicId: string | null = null;\n    let breadcrumbItems: BreadcrumbItem[] = [];\n\n    onMount(async () => {\n        try {\n            // Get the topic ID from the page store\n            topicId = $page.params.id;\n            \n            // Load data if we have an ID\n            if (topicId) {\n                await loadTopic(topicId);\n                await loadPastPractices(topicId);\n                updateBreadcrumbs();\n            } else {\n                error = 'Invalid topic ID';\n                loading = false;\n            }\n        } catch (err) {\n            console.error('Error in onMount:', err);\n            error = err instanceof Error ? err.message : 'An unexpected error occurred';\n            loading = false;\n        }\n    });\n\n    async function loadTopic(id: string) {\n        try {\n            loading = true;\n            error = null;\n            \n            if (!id) {\n                throw new Error('Topic ID is required');\n            }\n\n            const result = await pb.collection('practice_topics').getOne<PracticeTopic>(id);\n\n            // Parse tags if they're stored as a string\n            if (result.tags) {\n                const tagsValue = result.tags as string | string[];\n                if (typeof tagsValue === 'string') {\n                    try {\n                        if (tagsValue.trim().startsWith('[')) {\n                            result.tags = JSON.parse(tagsValue);\n                        } else {\n                            result.tags = tagsValue.split(',').map((tag: string) => tag.trim()).filter(Boolean);\n                        }\n                    } catch (err) {\n                        console.error('Error parsing tags:', err);\n                        result.tags = [];\n                    }\n                }\n            } else {\n                result.tags = [];\n            }\n\n            topic = result;\n        } catch (err) {\n            console.error('Failed to load topic:', err);\n            error = 'Failed to load practice topic';\n        } finally {\n            loading = false;\n        }\n    }\n\n    async function loadPastPractices(id: string) {\n        try {\n            const result = await pb.collection('practice_sessions').getList(1, 10, {\n                filter: `practice_topic=\"${id}\"`,\n                sort: '-created',\n                expand: 'learner,practice_topic'\n            });\n            pastPractices = result.items;\n        } catch (err) {\n            console.error('Failed to load past practices:', err);\n        }\n    }\n\n    function goBack() {\n        goto('/practice-topics');\n    }\n\n    function editTopic() {\n        if (!topic) return;\n        goto(`/practice-topics/edit/${topic.id}`);\n    }\n\n    async function startPractice() {\n        if (!topic) return;\n\n        try {\n            const authData = pb.authStore.model;\n            if (!authData) {\n                console.error('User not authenticated');\n                error = 'You must be logged in to start a practice';\n                return;\n            }\n\n            try {\n                const instructorRecord = await pb.collection('instructors').getFirstListItem(`user=\"${authData.id}\"`);\n                if (instructorRecord) {\n                    goto(`/practice-topics/${topic.id}/create-session`);\n                    return;\n                }\n            } catch {\n                // Not an instructor, continue as learner\n            }\n\n            try {\n                const learnerRecord = await pb.collection('learners').getFirstListItem(`user=\"${authData.id}\"`);\n                \n                // Create the session with all required fields\n                const sessionData = {\n                    practice_topic: topic.id,\n                    learner: learnerRecord.id,\n                    practice_items: \"[]\", // Send as string since PocketBase expects JSON\n                    assigned_at: new Date().toISOString(),\n                    status: 'InProgress',\n                    name: `Practice: ${topic.name}`\n                };\n                \n                const newSession = await pb.collection('practice_sessions').create(sessionData);\n                \n                // Redirect to practice session page using SvelteKit routing\n                goto(`/practice-sessions/${newSession.id}`);\n            } catch (err) {\n                console.error('Failed to find learner record:', err);\n                error = 'Could not find your learner profile. Please contact support.';\n                return;\n            }\n        } catch (err) {\n            console.error('Failed to create practice session:', err);\n            error = 'Failed to start new practice: ' + (err instanceof Error ? err.message : String(err));\n        }\n    }\n\n    function updateBreadcrumbs() {\n        if (!topic) return;\n        \n        breadcrumbItems = [\n            {\n                label: 'Topics',\n                href: '/practice-topics',\n                icon: 'topic'\n            },\n            {\n                label: topic.name,\n                icon: 'topic'\n            }\n        ];\n    }\n\n    // Actions for the toolbar\n    $: topicActions = [\n        {\n            id: 'back',\n            label: 'Back',\n            icon: 'back',\n            variant: 'secondary' as const,\n            onClick: goBack\n        },\n        {\n            id: 'edit',\n            label: 'Edit',\n            icon: 'edit',\n            variant: 'primary' as const,\n            onClick: editTopic\n        }\n    ];\n</script>\n\n<div class=\"container mx-auto px-4 py-8\">\n    <div class=\"flex justify-between items-center mb-6\">\n        <div>\n            <Breadcrumbs items={breadcrumbItems} />\n        </div>\n        <ActionToolbar actions={topicActions} />\n    </div>\n\n    {#if loading}\n        <div class=\"flex justify-center items-center h-64\">\n            <div class=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary\"></div>\n        </div>\n    {:else if error}\n        <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n            <strong class=\"font-bold\">Error!</strong>\n            <span class=\"block sm:inline\"> {error}</span>\n        </div>\n    {:else if topic}\n        <div class=\"bg-white shadow-md rounded-lg p-6 mb-6\">\n            <h2 class=\"text-xl font-semibold text-gray-900 mb-2\">{topic.name}</h2>\n            \n            {#if topic.description}\n                <p class=\"text-gray-600 mb-4\">{topic.description}</p>\n            {/if}\n            \n            <div class=\"flex flex-wrap gap-2 mb-4\">\n                <span class=\"bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded\">\n                    {topic.subject}\n                </span>\n                \n                {#if topic.target_age_range}\n                    <span class=\"bg-green-100 text-green-800 text-xs font-medium px-2.5 py-0.5 rounded\">\n                        Age: {topic.target_age_range}\n                    </span>\n                {/if}\n                \n                {#if topic.target_grade_level}\n                    <span class=\"bg-purple-100 text-purple-800 text-xs font-medium px-2.5 py-0.5 rounded\">\n                        Grade: {topic.target_grade_level}\n                    </span>\n                {/if}\n            </div>\n            \n            {#if topic.tags && Array.isArray(topic.tags) && topic.tags.length > 0}\n                <div class=\"mb-4\">\n                    <div class=\"text-sm font-semibold text-gray-700 mb-1\">Tags:</div>\n                    <div class=\"flex flex-wrap gap-1\">\n                        {#each topic.tags as tag}\n                            <span class=\"bg-gray-100 text-gray-800 text-xs font-medium px-2 py-0.5 rounded\">\n                                {tag}\n                            </span>\n                        {/each}\n                    </div>\n                </div>\n            {/if}\n                \n            <div class=\"mb-4\">\n                <div class=\"grid grid-cols-2 gap-4\">\n                    <div class=\"bg-gray-50 p-3 rounded\">\n                        <div class=\"text-sm font-semibold text-gray-700 mb-1\">Difficulty Level:</div>\n                        <div>{topic.difficulty_level ?? 'Not specified'}</div>\n                    </div>\n                    \n                    <div class=\"bg-gray-50 p-3 rounded\">\n                        <div class=\"text-sm font-semibold text-gray-700 mb-1\">Target Ages:</div>\n                        <div>{topic.target_age_range || 'Not specified'}</div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"mt-8 flex justify-center\">\n                <button\n                    type=\"button\"\n                    class=\"inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-all duration-200\"\n                    on:click={startPractice}\n                >\n                    <svg class=\"h-6 w-6 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n                    </svg>\n                    Create Practice Session\n                </button>\n            </div>\n        </div>\n            \n        <!-- Past Practice Sessions Section -->\n        {#if pastPractices.length > 0}\n            <div class=\"bg-white shadow-md rounded-lg p-6\">\n                <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">Past Practice Sessions</h3>\n                \n                <div class=\"overflow-x-auto\">\n                    <table class=\"min-w-full bg-white\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200\">\n                                <th class=\"px-4 py-2 text-left text-sm font-semibold text-gray-700\">Session Name</th>\n                                <th class=\"px-4 py-2 text-left text-sm font-semibold text-gray-700\">Learner</th>\n                                <th class=\"px-4 py-2 text-left text-sm font-semibold text-gray-700\">Date</th>\n                                <th class=\"px-4 py-2 text-left text-sm font-semibold text-gray-700\">Status</th>\n                                <th class=\"px-4 py-2 text-left text-sm font-semibold text-gray-700\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {#each pastPractices as session}\n                                <tr class=\"border-b border-gray-200 hover:bg-gray-50\">\n                                    <td class=\"px-4 py-2 text-sm text-gray-700\">{session.name || 'Practice Session'}</td>\n                                    <td class=\"px-4 py-2 text-sm text-gray-700\">\n                                        {session.expand?.learner?.nickname || 'Unknown Learner'}\n                                    </td>\n                                    <td class=\"px-4 py-2 text-sm text-gray-700\">\n                                        {new Date(session.created).toLocaleDateString()}\n                                    </td>\n                                    <td class=\"px-4 py-2 text-sm\">\n                                        <span class={`px-2 py-1 rounded-full text-xs font-medium \n                                            ${session.status === 'Completed' ? 'bg-green-100 text-green-800' : \n                                              session.status === 'InProgress' ? 'bg-yellow-100 text-yellow-800' : \n                                              'bg-blue-100 text-blue-800'}`}>\n                                            {session.status}\n                                        </span>\n                                    </td>\n                                    <td class=\"px-4 py-2 text-sm text-gray-700\">\n                                        <a \n                                            href={`/practice-sessions/${session.id}`} \n                                            class=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                                        >\n                                            View\n                                        </a>\n                                    </td>\n                                </tr>\n                            {/each}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        {/if}\n    {/if}\n</div> "],"names":["topic","pastPractices","$.mutable_source","loading","error","topicId","breadcrumbItems","onMount","$page","loadTopic","loadPastPractices","updateBreadcrumbs","$.set","err","id","result","pb","tagsValue","tag","goBack","goto","editTopic","$.get","startPractice","authData","learnerRecord","sessionData","newSession","topicActions","$.template_effect","$.set_text","text_2","$$render","consequent_2","text_4","consequent_3","text_5","consequent_4","$.index","$$anchor","consequent_5","$.each","tbody","session","text_10","text_12","$.set_attribute","a","consequent_6","text_1","text_3","consequent_7","consequent_1","alternate_1","consequent","alternate"],"mappings":"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"}